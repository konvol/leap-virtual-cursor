{"ast":null,"code":"var Dialog = module.exports = function (message, options) {\n  this.options = options || {};\n  this.message = message;\n  this.createElement();\n};\n\nDialog.prototype.createElement = function () {\n  this.element = document.createElement('div');\n  this.element.className = \"leapjs-dialog\";\n  this.element.style.position = \"fixed\";\n  this.element.style.top = '8px';\n  this.element.style.left = 0;\n  this.element.style.right = 0;\n  this.element.style.textAlign = 'center';\n  this.element.style.zIndex = 1000;\n  var dialog = document.createElement('div');\n  this.element.appendChild(dialog);\n  dialog.style.className = \"leapjs-dialog\";\n  dialog.style.display = \"inline-block\";\n  dialog.style.margin = \"auto\";\n  dialog.style.padding = \"8px\";\n  dialog.style.color = \"#222\";\n  dialog.style.background = \"#eee\";\n  dialog.style.borderRadius = \"4px\";\n  dialog.style.border = \"1px solid #999\";\n  dialog.style.textAlign = \"left\";\n  dialog.style.cursor = \"pointer\";\n  dialog.style.whiteSpace = \"nowrap\";\n  dialog.style.transition = \"box-shadow 1s linear\";\n  dialog.innerHTML = this.message;\n\n  if (this.options.onclick) {\n    dialog.addEventListener('click', this.options.onclick);\n  }\n\n  if (this.options.onmouseover) {\n    dialog.addEventListener('mouseover', this.options.onmouseover);\n  }\n\n  if (this.options.onmouseout) {\n    dialog.addEventListener('mouseout', this.options.onmouseout);\n  }\n\n  if (this.options.onmousemove) {\n    dialog.addEventListener('mousemove', this.options.onmousemove);\n  }\n};\n\nDialog.prototype.show = function () {\n  document.body.appendChild(this.element);\n  return this;\n};\n\nDialog.prototype.hide = function () {\n  document.body.removeChild(this.element);\n  return this;\n}; // Shows a DOM dialog box with links to developer.leapmotion.com to upgrade\n// This will work whether or not the Leap is plugged in,\n// As long as it is called after a call to .connect() and the 'ready' event has fired.\n\n\nDialog.warnOutOfDate = function (params) {\n  params || (params = {});\n  var url = \"http://developer.leapmotion.com?\";\n  params.returnTo = window.location.href;\n\n  for (var key in params) {\n    url += key + '=' + encodeURIComponent(params[key]) + '&';\n  }\n\n  var dialog,\n      onclick = function (event) {\n    if (event.target.id != 'leapjs-decline-upgrade') {\n      var popup = window.open(url, '_blank', 'height=800,width=1000,location=1,menubar=1,resizable=1,status=1,toolbar=1,scrollbars=1');\n\n      if (window.focus) {\n        popup.focus();\n      }\n    }\n\n    dialog.hide();\n    return true;\n  },\n      message = \"This site requires Leap Motion Tracking V2.\" + \"<button id='leapjs-accept-upgrade'  style='color: #444; transition: box-shadow 100ms linear; cursor: pointer; vertical-align: baseline; margin-left: 16px;'>Upgrade</button>\" + \"<button id='leapjs-decline-upgrade' style='color: #444; transition: box-shadow 100ms linear; cursor: pointer; vertical-align: baseline; margin-left: 8px; '>Not Now</button>\";\n\n  dialog = new Dialog(message, {\n    onclick: onclick,\n    onmousemove: function (e) {\n      if (e.target == document.getElementById('leapjs-decline-upgrade')) {\n        document.getElementById('leapjs-decline-upgrade').style.color = '#000';\n        document.getElementById('leapjs-decline-upgrade').style.boxShadow = '0px 0px 2px #5daa00';\n        document.getElementById('leapjs-accept-upgrade').style.color = '#444';\n        document.getElementById('leapjs-accept-upgrade').style.boxShadow = 'none';\n      } else {\n        document.getElementById('leapjs-accept-upgrade').style.color = '#000';\n        document.getElementById('leapjs-accept-upgrade').style.boxShadow = '0px 0px 2px #5daa00';\n        document.getElementById('leapjs-decline-upgrade').style.color = '#444';\n        document.getElementById('leapjs-decline-upgrade').style.boxShadow = 'none';\n      }\n    },\n    onmouseout: function () {\n      document.getElementById('leapjs-decline-upgrade').style.color = '#444';\n      document.getElementById('leapjs-decline-upgrade').style.boxShadow = 'none';\n      document.getElementById('leapjs-accept-upgrade').style.color = '#444';\n      document.getElementById('leapjs-accept-upgrade').style.boxShadow = 'none';\n    }\n  });\n  return dialog.show();\n}; // Tracks whether we've warned for lack of bones API.  This will be shown only for early private-beta members.\n\n\nDialog.hasWarnedBones = false;\n\nDialog.warnBones = function () {\n  if (this.hasWarnedBones) return;\n  this.hasWarnedBones = true;\n  console.warn(\"Your Leap Service is out of date\");\n\n  if (!(typeof process !== 'undefined' && process.versions && process.versions.node)) {\n    this.warnOutOfDate({\n      reason: 'bones'\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"script"}